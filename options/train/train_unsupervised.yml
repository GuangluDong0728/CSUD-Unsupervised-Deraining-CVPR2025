# general settings
name: unsupervised_deraining
model_type: UnsupervisedModel
scale: 1
num_gpu: 1
manual_seed: 728

# dataset and data loader settings
datasets:
  train1:
    name: rain
    type: UnsupervisedDataset
    dataroot_gt: ~ #rainy_images_root
    dataroot_lq: ~ #rainy_images_root
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true
    use_rot: false

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 2 # batchsize set to 1 or 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  train2:
    name: gt
    type: UnsupervisedDataset
    dataroot_gt: ~ #clean_images_root
    dataroot_lq: ~ #clean_images_root
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true
    use_rot: false

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 2 # batchsize set to 1 or 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val_1:
    name: test
    type: PairedImageDataset
    dataroot_gt: ~ #test_clean_images_root
    dataroot_lq: ~ #test_rainy_images_root
    io_backend:
      type: disk

# network structures
network_g:
  type: NAFNet
  img_channel: 3
  width: 32
  middle_blk_num: 12
  enc_blk_nums: [2, 2, 4, 8]
  dec_blk_nums: [2, 2, 2, 2]
  # type: NAFNetLocal
  # img_channel: 3
  # width: 64
  # enc_blk_nums: [1, 1, 1, 28]
  # middle_blk_num: 1
  # dec_blk_nums: [1, 1, 1, 1]

network_t:
  type: _NetG_DOWN_init
  stride: 1

network_d:
  type: NLayerDiscriminator
  input_nc: 6

# path
path:
  pretrain_network_g: ~
  strict_load_ir: true
  resume_state: ~

  pretrain_network_t: ~
  strict_load_g: true
  resume_state: ~

  pretrain_network_d: ~
  strict_load_d: true
  resume_state: ~


# training settings
train:
  # ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_t:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [20000, 40000, 60000, 80000]
    # milestones: [100000]
    gamma: 0.5

  total_iter: 100000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  ssim_opt:
    type: log_SSIM_loss
    loss_weight: 1.0
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 0.2
    style_weight: 0
    range_norm: false
    criterion: l1
  gan_opt:
    type: UNGANLoss
    gan_type: lsgan
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5000
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
